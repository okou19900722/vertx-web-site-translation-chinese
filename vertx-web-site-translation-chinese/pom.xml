<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>vertx-web-site-translation-chinese-parent</artifactId>
        <groupId>tk.okou</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>vertx-web-site-translation-chinese</artifactId>


    <properties>
        <vertx.version>3.6.0-SNAPSHOT</vertx.version>
        <vertx.docs.version>3.6.0-SNAPSHOT</vertx.docs.version>
        <asciidoc.path>/kotlin</asciidoc.path>
    </properties>

    <dependencies>
        <!--这个依赖是为了按配置的docgen.generators来生成对应语言的文档-->
        <dependency>
            <groupId>tk.okou</groupId>
            <artifactId>vertx-codegen-options</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--vertx-lang-groovy依赖了vertx-lang-groovy-codegen，而这个依赖里有生成groovy文档需要的GroovyDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-groovy</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--groovy 的override在这个依赖里-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-groovy</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--生成js的文档，需要这个依赖里的JSDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-js</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--js 的override在这个依赖里-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-js</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--生成kotlin文档，需要这个依赖里的KotlinDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin-codegen</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--kotlin 的override在这个依赖里-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--生成ruby文档，需要这个依赖里的RubyDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-ruby-codegen</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--ruby 的override在这个依赖里-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-ruby</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-ceylon</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--生成ruby文档，需要这个依赖里的CeylonDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-ceylon-doc</artifactId>
            <version>${vertx.docs.version}</version>
        </dependency>
        <!--生成scala文档，需要这个依赖里的ScalaDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-scala_2.12</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-scala-docs_2.12</artifactId>
            <version>${vertx.version}</version>
            <scope>provided</scope>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--scala 的override在这个依赖里-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-scala_2.12</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>io.vertx</groupId>-->
        <!--<artifactId>vertx-codegen</artifactId>-->
        <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--生成文档的工具DocGenProcessor需要这个依赖，且生成java文档，需要这个依赖里的JavaDocGenerator-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-docgen</artifactId>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <!--examples翻译成其他语言需要这个依赖里对应语言的Lang-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-codetrans</artifactId>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <!--文档依赖开始-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-amqp-bridge</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-common</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-htdigest</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-htpasswd</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-jdbc</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-jwt</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-mongo</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-oauth2</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-auth-shiro</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-bridge-common</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-camel-bridge</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-circuit-breaker</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-consul</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-git</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-hocon</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-kubernetes-configmap</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-redis</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-spring-config-server</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-vault</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-yaml</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-zookeeper</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-consul-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <type>jar</type>
        </dependency>
        <!--vertx-docker-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-dropwizard-metrics</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-grpc</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-hazelcast</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-health-check</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-http-service-factory</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-ignite</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-infinispan</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-jdbc-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-junit5</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-jwt</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-kafka-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin-coroutines</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mail-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mail-service</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-maven-service-factory</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-micrometer-metrics</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-service</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mqtt</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mysql-postgresql-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rabbitmq-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-reactive-streams</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-redis-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-backend-consul</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-backend-redis</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-backend-zookeeper</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-bridge-consul</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-bridge-docker-links</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery-bridge-kubernetes</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>io.vertx</groupId>-->
            <!--<artifactId>vertx-service-discovery-bridge-zookeeper</artifactId>-->
            <!--<classifier>sources</classifier>-->
            <!--<version>${vertx.version}</version>-->
            <!--<optional>true</optional>-->
        <!--</dependency>-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-factory</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-proxy</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-shell</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-sockjs-service-proxy</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-sql-common</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-stack-manager</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>io.vertx</groupId>
                    <artifactId>vertx-stack-manager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-stomp</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-sync</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-tcp-eventbus-bridge</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-unit</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-api-contract</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-zookeeper</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>










        <!--文档依赖结束-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin</artifactId>
            <version>${vertx.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rx-java</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rx-java2</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-factory</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-proxy</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>sources</classifier>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-ceylon-stack</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-stack-docker</artifactId>
            <version>${vertx.docs.version}</version>
            <classifier>docs</classifier>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>


        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-common</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-freemarker</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-handlebars</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-jade</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-mvel</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-pebble</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-rocker</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-thymeleaf</artifactId>
            <classifier>sources</classifier>
            <version>${vertx.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.7</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.hystrix</groupId>
            <artifactId>hystrix-core</artifactId>
            <version>1.5.2</version>
            <exclusions>
                <exclusion>
                    <groupId>io.reactivex</groupId>
                    <artifactId>rxjava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>

        <!-- Transitive dependencies declared as optional in other modules, and needed for instance in docgen -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.0.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-influx</artifactId>
            <version>1.0.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-jmx</artifactId>
            <version>1.0.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-graphite</artifactId>
            <version>1.0.0</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.10.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <!-- Unpack java sources to target/java-sources -->
                    <execution>
                        <id>unpack-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-sources-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>**/*.java,examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,io/vertx/groovy/**,examples/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <excludeArtifactIds>
                                vertx-hazelcast,
                                vertx-mail-service,
                                vertx-grpc,
                                vertx-unit,
                                vertx-junit5,
                                vertx-infinispan,
                                vertx-sockjs-service-proxy,
                                vertx-maven-service-factory,
                                vertx-service-proxy,
                                vertx-service-factory,
                                vertx-ignite
                            </excludeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-example</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-hazelcast,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-hazelcast
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-hazelcast</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java3</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-mail-service
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-mail-service</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java4</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-grpc
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-grpc</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java5</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-unit
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-unit</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java6</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-junit5
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-junit5</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java7</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-infinispan
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-infinispan</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java8</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-sockjs-service-proxy
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java9</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-mail-service
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-maven-service-factory</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java10</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-service-proxy
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-service-proxy</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java11</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-service-factory
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-service-factory</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-java12</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/java-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <!--<excludeArtifactIds>vertx-camel-bridge,vertx-maven-service-proxy</excludeArtifactIds>-->
                            <includeArtifactIds>
                                vertx-ignite
                            </includeArtifactIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <includes>examples/**/*.java</includes>
                            <excludes>
                                **/impl/**/*.java,examples/override/**,**\/package-info.java
                            </excludes>
                            <outputDirectory>${project.build.directory}/sources/java-vertx-ignite</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unpack-asciidoc</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <markersDirectory>${project.build.directory}/asciidoc-unpack-markers</markersDirectory>
                            <includes>*.adoc,images/**</includes>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <includeClassifiers>sources</includeClassifiers>
                            <outputDirectory>${project.build.directory}/sources/asciidoc</outputDirectory>
                            <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
                            <stripVersion>true</stripVersion>
                            <stripClassifier>true</stripClassifier>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unpack-docs</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <markersDirectory>${project.build.directory}/docs-unpack-markers</markersDirectory>
                            <includeGroupIds>io.vertx</includeGroupIds>
                            <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
                            <includeClassifiers>docs</includeClassifiers>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <outputDirectory>${project.build.directory}/sources/asciidoc</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>

                    <!-- Remove the -source-jar suffix in unpacked asciidoc -->
                    <execution>
                        <id>copy images</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target name="Remove the -source-jar prefix in unpackage asciidoc">
                                <move todir="${project.build.directory}/sources/asciidoc/kotlin/vertx-lang-kotlin-coroutines">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-kotlin-coroutines-docs-zip" />
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-kotlin-coroutines-docs-zip"/>
                                <move todir="${project.build.directory}/docs/vertx-docker">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-stack-docker-docs-zip" />
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-kotlin-coroutines-docs-zip"/>
                                <!--kdoc是kotlin的docs文件-->
                                <move todir="${project.build.directory}/docs/kdoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-kotlin-docs-zip/kdoc"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-kotlin-docs-zip/kdoc"/>
                                <!--yardoc是ruby的docs文件-->
                                <move todir="${project.build.directory}/docs/yardoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-ruby-docs-zip/yardoc"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-ruby-docs-zip/yardoc"/>
                                <!--jsdoc是JavaScript的docs文件-->
                                <move todir="${project.build.directory}/docs/jsdoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-js-docs-zip/jsdoc"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-js-docs-zip/jsdoc"/>
                                <!--ceylondoc是ceylon的docs文件-->
                                <move todir="${project.build.directory}/docs/ceylondoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-ceylon-docs-zip/ceylondoc"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-ceylon-docs-zip"/>
                                <move todir="${project.build.directory}/docs/ceylondoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-ceylon-stack-docs-zip/ceylondoc"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-ceylon-stack-docs-zip"/>
                                <!--scaladoc是scala的docs文件-->
                                <move todir="${project.build.directory}/docs/scaladocs">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-scala-docs_2.12-docs-zip/scaladocs"/>
                                </move>
                                <move todir="${project.build.directory}/sources/asciidoc/scala/vertx-proton">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-scala-docs_2.12-docs-zip/vertx-proton"/>
                                </move>
                                <move todir="${project.build.directory}/sources/asciidoc/scala/vertx-consul-service">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-lang-scala-docs_2.12-docs-zip/vertx-consul-service"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-lang-scala-docs_2.12-docs-zip"/>
                                <!--将images分别复制到对应语言的文件夹下，方便统一处理-->
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$" to="/js/\1/images\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$"
                                            to="/scala/\1/images\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$"
                                            to="/groovy/\1/images\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$"
                                            to="/ceylon/\1/images\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$"
                                            to="/kotlin/\1/images\2"/>
                                </copy>
                                <move todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar\\images(.*)$" to="/java/\1/images\2"/>
                                </move>
                                <!--冲突，与unpack-java2任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-hazelcast/js/vertx-hazelcast/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-hazelcast-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-hazelcast-sources-jar" />
                                <!--冲突，与unpack-java3任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-mail-service/js/vertx-mail-service/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-mail-service-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-mail-service-sources-jar" />
                                <!--冲突，与unpack-java4任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-grpc/js/vertx-grpc/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-grpc-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-grpc-sources-jar" />
                                <!--冲突，与unpack-java5任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-unit/js/vertx-unit/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-unit-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-unit-sources-jar" />
                                <!--冲突，与unpack-java6任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-junit5/js/vertx-junit5/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-junit5-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-junit5-sources-jar" />
                                <!--冲突，与unpack-java7任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-infinispan/js/vertx-infinispan/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-infinispan-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-infinispan-sources-jar" />
                                <!--冲突，与unpack-java8任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/js/vertx-sockjs-service-proxy/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-sockjs-service-proxy-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-sockjs-service-proxy-sources-jar" />
                                <!--冲突，与unpack-java9任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-maven-service-factory/js/vertx-maven-service-factory/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-maven-service-factory-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-maven-service-factory-sources-jar" />
                                <!--冲突，与unpack-java10任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-service-proxy/js/vertx-service-proxy/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-service-proxy-docs-zip">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-service-proxy-docs-zip" />
                                <!--冲突，与unpack-java11任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-service-factory/js/vertx-service-factory/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-service-factory-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-service-factory-sources-jar" />
                                <!--冲突，与unpack-java12任务对应-->
                                <copy todir="${project.build.directory}/sources/asciidoc-vertx-ignite/js/vertx-ignite/js">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/vertx-ignite-sources-jar">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-ignite-sources-jar" />
                                <!--将文档分别复制到对应语言的文件夹下，方便统一处理-->
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/js/\1/js\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/scala/\1/scala\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/groovy/\1/groovy\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/kotlin/\1/kotlin\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/ceylon/\1/ceylon\2"/>
                                </copy>
                                <move todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-sources-jar(.*)$" to="/java/\1/java\2"/>
                                </move>

                                <!--将override文档复制到对应语言的文件夹下，方便统一处理-->
                                <move todir="${project.build.directory}/sources/asciidoc/" overwrite="true">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^vertx-core-docs-zip\\java\\(.*)$"
                                            to="/java/vertx-core/\1"/>
                                </move>
                                <delete dir="${project.build.directory}/sources/asciidoc/vertx-core-docs-zip"/>
                                <move todir="${project.build.directory}/sources/asciidoc/" overwrite="true">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^vertx-lang-scala_2.12-docs-zip(.*)$"
                                            to="/scala/vertx-core/\1"/>
                                </move>
                                <move todir="${project.build.directory}/sources/asciidoc/" overwrite="true">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^vertx-lang-(.*)-docs-zip(.*)$" to="/\1\2"/>
                                </move>
                                <move todir="${project.build.directory}/sources/asciidoc">
                                    <fileset dir="${project.build.directory}/sources/asciidoc">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)-docs-zip(.*)$" to="/java/\1\2"/>
                                </move>
                                <!--!!!!请确保翻译的文件在最后复制，这样就可以覆盖掉原文档-->
                                <!--将翻译文档复制到对应语言的文件夹下，方便统一处理-->
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/js/\1/js/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/groovy/\1/groovy/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/scala/\1/scala/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/kotlin/\1/kotlin/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/java/\1/java/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/ceylon/\1/ceylon/\2"/>
                                </copy>
                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/origin">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^(.*)\\(.*)$" to="/ruby/\1/ruby/\2"/>
                                </copy>

                                <copy todir="${project.build.directory}/sources/asciidoc" overwrite="true">
                                    <fileset dir="${project.basedir}/src/main/translation/override">
                                        <include name="**/*"/>
                                    </fileset>
                                    <mapper type="regexp" from="^([^\\]*)\\([^\\]*)\\(.*)$" to="/\2/\1/\2/\3"/>
                                </copy>

                                <!--vertx-core的java模块包了两层java，所以专门在翻译文件复制之后把整个vertx-core/java下的文件移到vertx-core/java/java目录下，所以这个是允许放到翻译文档下的-->
                                <move todir="${project.build.directory}/sources/asciidoc/java/vertx-core/java/java"
                                      overwrite="true">
                                    <fileset dir="${project.build.directory}/sources/asciidoc/java/vertx-core/java">
                                        <include name="**/*"/>
                                    </fileset>
                                </move>
                                <!--复制到java中的文件，都先放到java目录下，然后在上面的任务自动到java/java目录下-->
                                <!--其他可能覆盖翻译文件的操作不允许放到翻译文档复制任务之后-->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 生成java-apidocs -->
            <!--<plugin>-->
                <!--<artifactId>maven-javadoc-plugin</artifactId>-->
                <!--<version>2.9.1</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>javadoc</goal>-->
                        <!--</goals>-->
                        <!--<phase>process-resources</phase>-->
                        <!--<configuration>-->
                            <!--<reportOutputDirectory>${project.build.directory}/docs/</reportOutputDirectory>-->
                            <!--<additionalparam>-Xdoclint:none</additionalparam>-->
                            <!--<sourcepath>${project.build.directory}/sources/java</sourcepath>-->
                            <!--<detectLinks/>-->
                            <!--<detectJavaApiLink/>-->
                            <!--<links>-->
                                <!--<link>http://docs.hazelcast.org/docs/3.5/javadoc/</link>-->
                                <!--<link>http://reactivex.io/RxJava/1.x/javadoc/</link>-->
                                <!--<link>http://reactivex.io/RxJava/javadoc/</link>-->
                                <!--<link>http://netty.io/4.1/api/</link>-->
                                <!--<link>http://fasterxml.github.com/jackson-annotations/javadoc/2.9/</link>-->
                                <!--<link>http://fasterxml.github.io/jackson-core/javadoc/2.9/</link>-->
                                <!--<link>http://fasterxml.github.io/jackson-databind/javadoc/2.9/</link>-->
                                <!--<link>http://www.grpc.io/grpc-java/javadoc/</link>-->
                            <!--</links>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <systemProperties>
                        <java.util.logging.SimpleFormatter.format>%4$s: %3$s - %5$s %6$s%n
                        </java.util.logging.SimpleFormatter.format>
                        <mvel2.disable.jit>true</mvel2.disable.jit>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-js-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-scala-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/scala</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>scala</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-groovy-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/groovy</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>groovy</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-kotlin-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/kotlin</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>kotlin</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-ruby-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/ruby</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>ruby</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-ceylon-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/ceylon</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>ceylon</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-java-doc1</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-example</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.JavaDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc/java</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>java</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>











                    <execution>
                        <id>generate-js-doc2</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc2</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-hazelcast</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-hazelcast/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc3</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc3</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-mail-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-mail-service/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc4</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc4</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-grpc</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-grpc/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <!--<execution>-->
                        <!--<id>generate-js-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/js</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>js</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-scala-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc5</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-unit</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-unit/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc6</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc6</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-junit5</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-junit5/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc7</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc7</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-infinispan</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-infinispan/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc8</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc8</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-sockjs-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-sockjs-service-proxy/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc9</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc9</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-maven-service</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-maven-service/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc10</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc10</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-proxy</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-proxy/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc11</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc11</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-service-factory</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-service-factory/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                    <execution>
                        <id>generate-js-doc12</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>
                            <processors>
                                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
                            </processors>
                            <optionMap>
                                <docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/js</docgen.source>
                                <docgen.output>${project.build.directory}/asciidoc</docgen.output>
                                <docgen.generators>js</docgen.generators>
                                <maven.groupId>${project.groupId}</maven.groupId>
                                <maven.artifactId>${project.artifactId}</maven.artifactId>
                                <maven.version>${project.version}</maven.version>
                            </optionMap>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>generate-scala-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/scala</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>scala</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-groovy-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/groovy</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>groovy</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-kotlin-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/kotlin</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>kotlin</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ruby-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/ruby</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ruby</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-ceylon-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.CustomDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/ceylon</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>ceylon</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                    <!--<execution>-->
                        <!--<id>generate-java-doc12</id>-->
                        <!--<goals>-->
                            <!--<goal>process</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<configuration>-->
                            <!--<sourceDirectory>${project.build.directory}/sources/java-vertx-ignite</sourceDirectory>-->
                            <!--<processors>-->
                                <!--<processor>io.vertx.docgen.JavaDocGenProcessor</processor>-->
                            <!--</processors>-->
                            <!--<optionMap>-->
                                <!--<docgen.source>${project.build.directory}/sources/asciidoc-vertx-ignite/java</docgen.source>-->
                                <!--<docgen.output>${project.build.directory}/asciidoc</docgen.output>-->
                                <!--<docgen.generators>java</docgen.generators>-->
                                <!--<maven.groupId>${project.groupId}</maven.groupId>-->
                                <!--<maven.artifactId>${project.artifactId}</maven.artifactId>-->
                                <!--<maven.version>${project.version}</maven.version>-->
                            <!--</optionMap>-->
                        <!--</configuration>-->
                    <!--</execution>-->











                </executions>
            </plugin>

            <!-- Run it to preview docs : mvn asciidoctor:process-asciidoc -->
            <!--<plugin>-->
            <!--<groupId>org.asciidoctor</groupId>-->
            <!--<artifactId>asciidoctor-maven-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<attributes>-->
            <!--<toc>left</toc>-->
            <!--</attributes>-->
            <!--<sourceDirectory>${project.build.directory}/docs</sourceDirectory>-->
            <!--<outputDirectory>${project.build.directory}/html</outputDirectory>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>