<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>vertx-translation-stack</artifactId>
    <groupId>tk.okou</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>vertx-service-discovery-translation</artifactId>
  <properties>
    <module>vertx-service-discovery</module>
    <scala.dependency>vertx-service-discovery-scala_2.12</scala.dependency>
    <docgen.generators>js,kotlin,ruby,groovy</docgen.generators>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>${module}</artifactId>
      <version>${vertx.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>${module}</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codetrans</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen</artifactId>
      <version>${docgen.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-js</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-kotlin-codegen</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-ruby-codegen</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-groovy-codegen</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-ceylon-doc</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-lang-scala_2.12</artifactId>
      <version>${vertx.version}</version>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-service-discovery-bridge-kubernetes</artifactId>
      <version>${vertx.docs.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-service-discovery-bridge-consul</artifactId>
      <version>${vertx.docs.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-service-discovery-bridge-docker-links</artifactId>
      <version>${vertx.docs.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-service-discovery-backend-redis</artifactId>
      <version>${vertx.docs.version}</version>
      <classifier>sources</classifier>
    </dependency>


    <dependency>
      <groupId>tk.okou</groupId>
      <artifactId>vertx-service-discovery-bridge-kubernetes-translation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>tk.okou</groupId>
      <artifactId>vertx-service-discovery-bridge-consul-translation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>tk.okou</groupId>
      <artifactId>vertx-service-discovery-bridge-docker-links-translation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>tk.okou</groupId>
      <artifactId>vertx-service-discovery-backend-redis-translation</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!-- 解压examples源码 -->
          <execution>
            <id>unpack-examples</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <markersDirectory>${project.build.directory}/markers/unpack-examples</markersDirectory>
              <includeGroupIds>io.vertx</includeGroupIds>
              <includeArtifactIds>
                ${module},
                vertx-service-discovery-bridge-kubernetes,
                vertx-service-discovery-bridge-consul,
                vertx-service-discovery-bridge-docker-links,
                vertx-service-discovery-backend-redis
              </includeArtifactIds>
              <includes>examples/**/*.java,example/**/*.java</includes>
              <includeClassifiers>sources</includeClassifiers>
              <outputDirectory>${project.build.directory}/sources/java</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>unpack-service-discovery-stack</id>
            <goals><goal>unpack-dependencies</goal></goals>
            <phase>generate-sources</phase>
            <configuration>
              <markersDirectory>${project.build.directory}/markers/unpack-config-stack</markersDirectory>
              <includeGroupIds>io.vertx</includeGroupIds>
              <includeArtifactIds>
                vertx-service-discovery-bridge-kubernetes,
                vertx-service-discovery-bridge-consul,
                vertx-service-discovery-bridge-docker-links,
                vertx-service-discovery-backend-redis
              </includeArtifactIds>
              <includes>**/*.adoc</includes>
              <includeClassifiers>sources</includeClassifiers>
              <excludes>override/**,dataobjects.adoc</excludes>
              <outputDirectory>${project.build.directory}/sources/stack-asciidoc</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-stack-translation</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="复制stack翻译文档">
                <copy todir="${project.build.directory}/sources/stack-asciidoc" overwrite="true">
                  <fileset dir="${project.basedir}/../vertx-service-discovery-bridge-kubernetes-translation/src/main/translation"/>
                  <fileset dir="${project.basedir}/../vertx-service-discovery-bridge-consul-translation/src/main/translation"/>
                  <fileset dir="${project.basedir}/../vertx-service-discovery-bridge-docker-links-translation/src/main/translation"/>
                  <fileset dir="${project.basedir}/../vertx-service-discovery-backend-redis-translation/src/main/translation"/>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
            <version>${vertx.version}</version>
          </dependency>
          <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-jdbc-client</artifactId>
            <version>${vertx.version}</version>
          </dependency>
          <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-redis-client</artifactId>
            <version>${vertx.version}</version>
          </dependency>
          <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-client</artifactId>
            <version>${vertx.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-asciidoc</id>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
          <execution>
            <id>generate-java-asciidoc</id>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
          <execution>
            <id>generate-scala-asciidoc</id>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>

          <execution>
            <id>generate-java-stack-asciidoc</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <sourceDirectory>${project.build.directory}/sources/java</sourceDirectory>
              <processors>
                <processor>io.vertx.docgen.JavaDocGenProcessor</processor>
              </processors>
              <optionMap>
                <docgen.source>${project.build.directory}/sources/stack-asciidoc</docgen.source>
                <docgen.output>${asciidoc.path}/${module}/$lang</docgen.output>
                <maven.groupId>io.vertx</maven.groupId>
                <maven.version>${vertx.version}</maven.version>
              </optionMap>
            </configuration>
          </execution>
          <execution>
            <id>generate-scala-stack-asciidoc</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <sourceDirectory>${project.build.directory}/sources/java</sourceDirectory>
              <processors>
                <processor>io.vertx.docgen.CustomDocGenProcessor</processor>
              </processors>
              <optionMap>
                <docgen.source>${project.build.directory}/sources/stack-asciidoc</docgen.source>
                <docgen.output>${asciidoc.path}/${module}/$lang</docgen.output>
                <docgen.generators>scala</docgen.generators>
                <maven.groupId>io.vertx</maven.groupId>
                <maven.version>${vertx.version}</maven.version>
              </optionMap>
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
       </plugin>
    </plugins>
  </build>
</project>
